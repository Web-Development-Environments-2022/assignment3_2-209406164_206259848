openapi: 3.0.0
info:
  title: Web Development Environment Project - Recipes Website
  description: This is an API for recipes website
  contact:
    name: Eden Chai & Arie Katz
    email: edench@post.bgu.ac.il
  version: 2.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: http://localhost:3000/

tags:
- name: auth
  description: User main account functions
- name: users
  description: User main profile functions
- name: recipes
  description: Site main functions

paths:
  /login:
    post:
      tags:
      - auth
      summary: Logs in the user to the system.
      description: Validates the user's inputed details and establishes the session with the server.
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: Login succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        "401":
          description: User is already logged in, one or more details are missing or username or password are incorrect.
  /register:
    post:
      tags:
      - auth
      summary: Registers a new user to the system
      description: Gets the user's inputed details and sends them to the server for account creation.
      operationId: Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        "200":
          description: User created successfully
        "401":
          description: The user is already logged in, one or more details are missing or user name already exists.
  /logout:
    post:
      tags:
      - auth
      summary: Logs out the user from the system
      description: Closes the connected session between the user and the server.
      operationId: Logout
      responses:
        "200":
          description: Logout succeeded.
        "401":
          description: The user is already logged out.
  /users/addToFavorites:
    post:
      tags:
      - users
      summary: Marks a recipe as favorite for easy acesses later.
      description: Adds the chosen recipe to the user favorite list to be accessed from his profile.
      operationId: userFavorite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recipeId'
        required: true
      responses:
        "200":
          description: The recipe successfully saved as favorite.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recipeId'
        "400":
          description: The recipe has already been marked as a favorite
  /users/getFavorites:
    get:
      tags:
      - users
      summary: Gets all the favorite recipes.
      description: Gets all favorite recipies that the user has marked as favorite.
      responses:
        "200":
          description: No recipes have been marked as favorites or the recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArr'
  /users/createPersonalRecipe:
    post:
      tags:
      - users
      summary: Upload a new recipe to the user profile.
      description: Create and add a new recipe to the user recipies to be accessed from his profile.
      operationId: userAddRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipePreview'
        required: true
      responses:
        "200":
          description: Recipe created successfully.
        "401":
          description: One or more details are missing.
  /users/getPreviewPersonalRecipes:
    get:
      tags:
      - users
      summary: Gets all the user recipes, the preview version
      description: Gets all recipies that the user has created. Include only preview.
      operationId: getPreviewRecipes
      responses:
        "200":
          description: No personal recipes found or recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArr'
  /users/getFullPersonalRecipes:
    get:
      tags:
      - users
      summary: Gets all the user recipes, the full version
      description: Gets all recipies that the user has created. Include only full.
      operationId: getFullRecipes
      responses:
        "200":
          description: No personal recipes found or recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArr'
  /users/getFamilyRecipes:
    get:
      tags:
      - users
      summary: Gets all the family recipes, the full version
      description: Gets all recipies that the owners has created. Include only full.
      operationId: getFamilyRecipes
      responses:
        "200":
          description: The recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArr'
  /users/getLastWatched:
    get:
      tags:
      - users
      summary: Gets the last watched recipes from the user.
      description: Gets the 3 latest recipes the current logged in user watched
      operationId: getWatched
      responses:
        "200":
          description: The recipes or no recipes were watched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArr'
  /recipes/Random:
    get:
      tags:
      - recipes
      summary: Brings 3 random recipes from the server.
      description: Pulls 3 random recipes from all available ones from the server in order to display in the main page for the user.
      responses:
        "200":
          description: Information on the 3 recipes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipesArr'
  /recipes/search:
    get:
      tags:
      - recipes
      summary: Search Recipe
      description: Create search object and wait to respond with returned items. You can add filter by cuisine, diet or intolerance
      parameters:
      - name: Recipe Name
        in: query
        description: Search for desired recipe by dish name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: Cuisine
        in: query
        description: Cuisine dropdown box
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Cusine'
      - name: Diet
        in: query
        description: Diet dropdown box
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Diet'
      - name: Intolerance
        in: query
        description: Intolerance dropdown box
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Intolerance'
      - name: Number of results
        in: query
        description: Number of results to retrieve 5(default)/10/15
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Information about recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullRecipe'
  /recipes/{recipeId}:
    get:
      tags:
      - recipes
      summary: Get information on a spesific recipe
      description: Show all information on a recipe that has been asked by the user.
      parameters:
      - name: recipeId
        in: path
        description: Recipe Id
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/recipeId'
      responses:
        "200":
          description: Retrived information about the specified recipe.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "204":
          description: No recipe with such id found.
components:
  schemas:
    Register:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          uniqueItems: true
          type: string
          description: Length between 3 and 8 letters only.
          example: admin
        firstname:
          type: string
          description: First name of the user.
          example: admin
        lastname:
          type: string
          description: Last name of the user.
          example: admin
        country:
          type: string
          description: Country of the user.
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: Length between 5 and 10 chars, one digit and one special symbol at least.
          format: password
          example: admin123!
        email:
          type: string
          description: Email of the user.
          example: admin@gmail.com
      description: Details the user attributes.
    Login:
      type: object
      properties:
        username:
          type: string
          description: Username of the User.
          example: admin
        password:
          type: string
          description: Password of the user.
          format: password
          example: admin123!
      description: Details the user log in attributes.
    recipeId:
      type: object
      properties:
        recipeId:
          type: string
          example: 324694
      description: Recipe identifier
    RecipePreview:
      type: object
      properties:
        recipeId:
          $ref: '#/components/schemas/recipeId'
        image:
          type: string
          description: The image of the recipe.
          format: URL
          example: URL
        title:
          type: string
          description: Recipe title.
          example: Brownies
        timeToMake:
          type: integer
          description: How much time it takes to make the  recipe in minutes.
          format: minutes
          example: 60
        likes:
          type: integer
          description: How many likes therecipe got.
          example: 770
        vegetarian:
          type: boolean
          description: Is the recipe vegetarian?
          example: true
        vegan:
          type: boolean
          description: Is the recipe vegan?
          example: true
        glutenFree:
          type: boolean
          description: Is the recipe gluten Free?
          example: true
        ingredients:
          type: string
          description: Recipe ingredients.
          example: '{"Flour 0.5 kg", "sugar 1 teaspoo"n, "water 200ml", "chocolate 1 plate"}'
        instructions:
          type: string
          description: Recipe instructions.
          example: '{"Mix flour sugar water and melted chocolate", "bake at 180c for 20 minutes"}'
        servings:
          type: integer
          description: How many servings the recipe provides.
          example: 3
        is_watched :
          type: boolean
          example : true
        is_favoried :
          type: boolean
          example : true
    
      description: Recipe object
    RecipesArr:
      type: object
      properties:
        randomRecipes:
          type: array
          items:
            $ref: '#/components/schemas/RecipePreview'
      description: Array of recipes
    RecipePractical:
      type: object
      properties:
        ingredients:
          type: string
          example: [
          "2 ripe bananas",
          "1 orange, juiced",
          "1 cup animal crackers, ground",
          "2 squares of Hershey's Semi-Sweet Natural Baking Chocolate, grated",
          "1 tablespoon margarine",
          "1/2 cup walnuts or pecans, chopped (optional)",
          "6 tablespoons Splenda No Calorie Sweetener, Granular",
          "12 decorative baking cups"
          ]
        instructions:
          type: string
          example: [
          [
            "Juice the orange.",
            "Grate the chocolate.",
            "Cut up the bananas in chunks and mash them well with a fork.",
            "Place the mashed bananas in a mixing bowl; add the ground crackers, the walnuts, the margarine, and the orange juice; mix it well. Get your kids hands in there, if you can.",
            "At this point, you can pinch off lime-sized dough with your thumb and index finger to make a dough ball with your hands.",
            "Dirty up the dough ball with the grated chocolate and place it inside of a decorative baking cup.",
            "Put the banana spheres inside the fridge for 1 to 2 hours before serving.",
            "If allergic to nuts, please omit the walnuts or pecans."
          ]
          ]
        servings:
          type: string
          example: 12
      description: Advanced data of the recipe.
    FullRecipe:
      properties:
        RecipeReview:
          $ref: '#/components/schemas/RecipePreview'
        RecipePractical:
          $ref: '#/components/schemas/RecipePractical'
      description: the whole recipe data.
    Cusine:
      type: string
      enum:
      - African
      - American
      - British
      - Cajun
      - Caribbean
      - Chinese
      - Eastern European
      - European
      - French
      - German
      - Greek
      - Indian
      - Irish
      - Italian
      - Japanese
      - Jewish
      - Korean
      - Latin American
      - Mediterranean
      - Mexican
      - Middle Eastern
      - Nordic
      - Southern
      - Spanish
      - Thai
      - Vietnamese
    Diet:
      type: string
      enum:
      - Gluten Free
      - Ketogenic
      - Vegetarian
      - Lacto-Vegetarian
      - Ovo-Vegetarian
      - Vegan
      - Pescetarian
      - Paleo
      - Primal
      - Low FODMAP
      - Whole30
    Intolerance:
      type: string
      enum:
      - Dairy
      - Egg
      - Gluten
      - Grain
      - Peanut
      - Seafood
      - Sesame
      - Shellfish
      - Soy
      - Sulfite
      - Tree Nut
      - Wheat